apiVersion: v1
kind: Secret
metadata:
  name: tesslate-app-secrets
  namespace: tesslate
type: Opaque
stringData:
  # Backend Configuration
  SECRET_KEY: changeme-use-strong-secret-key-in-production-minimum-32-characters
  JWT_SECRET: changeme-jwt-secret-use-strong-secret-in-production

  # OpenAI Configuration
  OPENAI_API_KEY: sk-your-openai-api-key-here
  OPENAI_API_BASE: https://api.openai.com/v1
  OPENAI_MODEL: gpt-4o-mini

  # Alternative AI Provider Examples (uncomment to use):

  # For Cerebras (example from your .env):
  # OPENAI_API_KEY: csk-your-cerebras-key-here
  # OPENAI_API_BASE: https://api.cerebras.ai/v1/
  # OPENAI_MODEL: qwen-3-coder-480b

  # For Llama (example from your .env):
  # OPENAI_API_KEY: LLM|your-llama-key-here
  # OPENAI_API_BASE: https://api.llama.com/compat/v1/
  # OPENAI_MODEL: Llama-4-Maverick-17B-128E-Instruct-FP8

  # For Custom Tesslate API (example from your .env):
  # OPENAI_API_KEY: sk-your-tesslate-key-here
  # OPENAI_API_BASE: https://apin.tesslate.com/v1/
  # OPENAI_MODEL: cerebras/qwen-3-coder-480b

---
# Example of how to apply this secret:
# kubectl apply -f k8s/manifests/app/01-app-secrets.yaml

# To update the secret after changing values:
# kubectl delete secret tesslate-app-secrets -n tesslate
# kubectl apply -f k8s/manifests/app/01-app-secrets.yaml

# To view the secret (base64 decoded):
# kubectl get secret tesslate-app-secrets -n tesslate -o yaml