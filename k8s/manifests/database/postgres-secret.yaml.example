# ============================================================================
# PostgreSQL Database Secret Template
# ============================================================================
#
# IMPORTANT: This is a template file. DO NOT use these values in production!
#
# Instructions:
# 1. Copy this file: cp postgres-secret.yaml.example postgres-secret.yaml
# 2. Replace ALL placeholder values with actual secrets
# 3. Never commit postgres-secret.yaml to version control
# 4. Use strong, randomly generated passwords
# 5. Ensure DATABASE_URL in app-secrets.yaml matches these credentials
#
# Password Generation:
#   openssl rand -base64 32
#
# ============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: tesslate
  labels:
    app: postgres
    component: database
type: Opaque
stringData:
  # ===== DATABASE CONFIGURATION =====

  # Database name (can be descriptive)
  # Default: tesslate (no need to change unless you have specific requirements)
  POSTGRES_DB: tesslate

  # Application database user
  # This user will be used by the backend service to connect to PostgreSQL
  # Default: tesslate_user (change if you prefer a different username)
  POSTGRES_USER: tesslate_user

  # Application database password (CRITICAL - MUST BE CHANGED)
  # Generate with: openssl rand -base64 32
  # Minimum 32 characters, randomly generated
  # IMPORTANT: This must match the password in app-secrets.yaml DATABASE_URL
  POSTGRES_PASSWORD: "REPLACE_WITH_STRONG_PASSWORD_MIN_32_CHARS"

  # PostgreSQL superuser (postgres) password (CRITICAL - MUST BE CHANGED)
  # Generate with: openssl rand -base64 32
  # This is for administrative tasks only
  # Should be different from POSTGRES_PASSWORD
  POSTGRES_ROOT_PASSWORD: "REPLACE_WITH_STRONG_ROOT_PASSWORD_MIN_32_CHARS"

# ============================================================================
# SECURITY CHECKLIST
# ============================================================================
# Before deploying to production, ensure:
# [ ] All REPLACE_WITH_* values have been replaced
# [ ] Passwords are at least 32 characters long
# [ ] Passwords are randomly generated (use openssl rand -base64 32)
# [ ] POSTGRES_PASSWORD and POSTGRES_ROOT_PASSWORD are different
# [ ] POSTGRES_PASSWORD matches the password in app-secrets.yaml DATABASE_URL
# [ ] File permissions are restricted (chmod 600 postgres-secret.yaml)
# [ ] This file is NOT committed to version control
# [ ] Backup of credentials stored in secure location (password manager/vault)
# [ ] Password rotation schedule documented
# ============================================================================
#
# DATABASE_URL FORMAT (for app-secrets.yaml):
# postgresql+asyncpg://tesslate_user:<POSTGRES_PASSWORD>@postgres.tesslate.svc.cluster.local:5432/tesslate
#
# Example:
# If POSTGRES_USER = tesslate_user
#    POSTGRES_PASSWORD = MySecurePassword123
#    POSTGRES_DB = tesslate
#
# Then DATABASE_URL should be:
# postgresql+asyncpg://tesslate_user:MySecurePassword123@postgres.tesslate.svc.cluster.local:5432/tesslate
#
# ============================================================================

# ============================================================================
# PASSWORD ROTATION PROCEDURE
# ============================================================================
# When rotating database passwords:
#
# 1. Generate new password:
#    NEW_PASSWORD=$(openssl rand -base64 32)
#
# 2. Update this secret:
#    kubectl edit secret postgres-secret -n tesslate
#    # Change POSTGRES_PASSWORD to new value
#
# 3. Update app-secrets.yaml:
#    kubectl edit secret tesslate-app-secrets -n tesslate
#    # Update DATABASE_URL with new password
#
# 4. Restart backend deployment:
#    kubectl rollout restart deployment/tesslate-backend -n tesslate
#
# 5. Restart PostgreSQL (if needed):
#    kubectl rollout restart deployment/postgres -n tesslate
#
# 6. Verify connections:
#    kubectl logs -n tesslate -l app=tesslate-backend --tail=50
#
# Recommended rotation frequency: Every 90-180 days
# ============================================================================
