# ============================================================================
# Application Secrets Template
# ============================================================================
#
# IMPORTANT: This is a template file. DO NOT use these values in production!
#
# Instructions:
# 1. Copy this file: cp app-secrets.yaml.example app-secrets.yaml
# 2. Replace ALL placeholder values with actual secrets
# 3. Never commit app-secrets.yaml to version control
# 4. Use strong, randomly generated values for all secrets
# 5. Rotate secrets regularly (every 90 days minimum)
#
# Secret Generation Examples:
# - SECRET_KEY: openssl rand -base64 64
# - JWT_SECRET: openssl rand -base64 64
# - Database Password: openssl rand -base64 32
#
# ============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: tesslate-app-secrets
  namespace: tesslate
  labels:
    app: tesslate
    component: security
type: Opaque
stringData:
  # ===== APPLICATION SECRETS =====
  # Main application secret key (minimum 64 characters)
  # Generate with: openssl rand -base64 64
  SECRET_KEY: "REPLACE_WITH_STRONG_SECRET_KEY_MIN_64_CHARS"

  # JWT signing secret (minimum 64 characters)
  # Generate with: openssl rand -base64 64
  # IMPORTANT: If you rotate this, all existing user sessions will be invalidated
  JWT_SECRET: "REPLACE_WITH_STRONG_JWT_SECRET_MIN_64_CHARS"

  # ===== AI SERVICE CREDENTIALS =====
  # OpenAI-compatible API key for code generation
  # Format depends on provider (OpenAI: sk-..., Anthropic: sk-ant-...)
  OPENAI_API_KEY: "REPLACE_WITH_YOUR_AI_PROVIDER_API_KEY"

  # OpenAI-compatible API base URL
  # Examples:
  # - OpenAI: https://api.openai.com/v1
  # - Anthropic: https://api.anthropic.com/v1
  # - Custom: https://your-llm-proxy.example.com/v1
  OPENAI_API_BASE: "https://api.openai.com/v1"

  # AI model to use for code generation
  # Examples:
  # - OpenAI: gpt-5-turbo, gpt-3.5-turbo
  # - Anthropic: claude-3-opus-20240229
  # - Cerebras: cerebras/qwen-3-coder-480b
  OPENAI_MODEL: "gpt-5-turbo"

  # ===== DATABASE CREDENTIALS =====
  # PostgreSQL connection URL
  # Format: postgresql+asyncpg://username:password@host:port/database
  # Generate password with: openssl rand -base64 32
  # IMPORTANT: Ensure this matches postgres-secret credentials
  DATABASE_URL: "postgresql+asyncpg://tesslate_user:REPLACE_WITH_STRONG_DB_PASSWORD@postgres.tesslate.svc.cluster.local:5432/tesslate"

  # ===== CORS AND SECURITY CONFIGURATION =====
  # CORS Allowed Origins (comma-separated list)
  # Include all frontend URLs that should access the API
  # Format: https://domain1.com,https://domain2.com
  # Example production config:
  CORS_ORIGINS: "https://studio-test.tesslate.com,https://studio-demo.tesslate.com,https://studio.tesslate.com"

  # Allowed Hosts (comma-separated list)
  # Hostnames for Vite dev server access and Content Security Policy
  # Include your production domains and any staging/demo environments
  ALLOWED_HOSTS: "studio.tesslate.com,studio-test.tesslate.com,studio-demo.tesslate.com,*.studio-test.tesslate.com,*.studio-demo.tesslate.com"

# ============================================================================
# SECURITY CHECKLIST
# ============================================================================
# Before deploying to production, ensure:
# [ ] All REPLACE_WITH_* values have been replaced
# [ ] Secrets are at least 32 characters (64+ recommended)
# [ ] Secrets are randomly generated (not dictionary words)
# [ ] Database password matches postgres-secret.yaml
# [ ] API keys are valid and have appropriate quotas
# [ ] File permissions are restricted (chmod 600)
# [ ] This file is NOT committed to version control
# [ ] Backup of secrets stored in secure location (password manager/vault)
# [ ] Secret rotation schedule documented
# ============================================================================
