# ============================================================================
# Tesslate Studio - Complete Configuration
# ============================================================================
# This file contains all configuration for Tesslate Studio.
# It is used by both Docker Compose and native development.
# For Kubernetes deployment, see k8s/.env.example
# ============================================================================

# Instructions:
# 1. Copy this file: cp .env.example .env
# 2. Update SECRET_KEY and LITELLM_MASTER_KEY below
# 3. For Docker Compose: docker compose up -d
# 4. For native development: Export these variables or use a .env loader
# 5. Never commit the .env file to version control

# ----------------------------------------------------------------------------
# Required Configuration
# ----------------------------------------------------------------------------

# Backend Secret Key (IMPORTANT: Change in production!)
SECRET_KEY=your-secret-key-here-change-this-in-production

# ----------------------------------------------------------------------------
# Database Configuration (PostgreSQL)
# ----------------------------------------------------------------------------

# PostgreSQL Database (used by both orchestrator and LiteLLM)
POSTGRES_DB=tesslate_dev
POSTGRES_USER=tesslate_user
POSTGRES_PASSWORD=dev_password_change_me
POSTGRES_PORT=5432

# ----------------------------------------------------------------------------
# LiteLLM Configuration (Required for AI features)
# ----------------------------------------------------------------------------
# External LiteLLM service configuration
# Point to your LiteLLM proxy server (shared between dev and production)

LITELLM_API_BASE=https://your-litellm-url.com/v1
LITELLM_MASTER_KEY=your-litellm-master-key-here

# LiteLLM User Configuration
# Models available to new users (comma-separated, no spaces)
# Example: gpt-4o-mini,gpt-3.5-turbo,claude-3-haiku,gemini-pro
# These should match model names configured in your LiteLLM proxy
LITELLM_DEFAULT_MODELS=gpt-4o-mini,gpt-3.5-turbo
# Team/access group for users in your LiteLLM setup
LITELLM_TEAM_ID=default
# Email domain for internal user emails
LITELLM_EMAIL_DOMAIN=localhost
# Initial budget per user in USD
LITELLM_INITIAL_BUDGET=10.0

# ----------------------------------------------------------------------------
# Optional Backend Configuration (has sensible defaults)
# ----------------------------------------------------------------------------

# Database URL (PostgreSQL - automatically configured for Docker Compose)
# Docker Compose: Uses postgres service (automatic)
# Production: Update with your PostgreSQL credentials
DATABASE_URL=postgresql+asyncpg://tesslate_user:dev_password_change_me@postgres:5432/tesslate_dev

# JWT Configuration (optional - has defaults)
# ALGORITHM=HS256
# ACCESS_TOKEN_EXPIRE_MINUTES=30
# REFRESH_TOKEN_EXPIRE_DAYS=14

# Deployment Mode (default: docker)
# Options: "docker" (local development) or "kubernetes" (production cluster)
DEPLOYMENT_MODE=docker

# File watching for dev containers (required for hot reload on Windows/Mac Docker)
# These settings enable file change detection in Docker volumes
CHOKIDAR_USEPOLLING=true
CHOKIDAR_INTERVAL=1000
WATCHPACK_POLLING=true

# ----------------------------------------------------------------------------
# Frontend Configuration
# ----------------------------------------------------------------------------

# Frontend API URL
# The backend API URL the frontend should connect to
#
# Docker Compose (Recommended):
#   VITE_API_URL=
#   (Empty uses Vite proxy which connects to orchestrator service in Docker)
#
# Native Development - Direct backend connection:
#   VITE_API_URL=http://localhost:8000
#
# Production - Different domain:
#   VITE_API_URL=https://api.yourdomain.com
#
VITE_API_URL=

# Frontend Allowed Hosts
# Comma-separated list of hostnames allowed to access the Vite dev server
# Used for Host header validation and security
# Leave commented for automatic configuration based on APP_DOMAIN
# VITE_ALLOWED_HOSTS=studio.tesslate.com,studio-test.tesslate.com,localhost,.localhost

# ----------------------------------------------------------------------------
# Domain and Port Configuration
# ----------------------------------------------------------------------------

# Application Domain (no protocol, just domain)
# This is used for:
#   - Main app routing
#   - Subdomain-based user dev environments (user{id}-project{id}.{APP_DOMAIN})
#   - CORS wildcard pattern matching (*.{APP_DOMAIN})
#
# Local development: studio.localhost
# Production: studio-demo.tesslate.com, studio.tesslate.com, etc.
APP_DOMAIN=studio.localhost

# Application Protocol (http or https)
APP_PROTOCOL=http

# Application Ports
APP_PORT=80
APP_SECURE_PORT=443
TRAEFIK_DASHBOARD_PORT=8080
BACKEND_PORT=8000
FRONTEND_PORT=5173

# Base URL (complete URL with protocol and domain)
# This is automatically constructed from APP_PROTOCOL and APP_DOMAIN
# Or you can override it directly
APP_BASE_URL=${APP_PROTOCOL}://${APP_DOMAIN}

# Development Server Base URL (for preview containers)
# Docker mode: Leave empty (uses .localhost domains)
# Kubernetes mode: Set to your ingress domain
# DEV_SERVER_BASE_URL=https://studio-test.tesslate.com
DEV_SERVER_BASE_URL=

# ----------------------------------------------------------------------------
# CORS and Security Configuration
# ----------------------------------------------------------------------------

# CORS Allowed Origins (comma-separated list)
# Add all frontend URLs that should be allowed to access the API
# For local development, this should match APP_BASE_URL
# For production, include your production domain(s)
CORS_ORIGINS=${APP_BASE_URL}

# Allowed Hosts (comma-separated list)
# List of hostnames allowed for Vite dev server and Content Security Policy
ALLOWED_HOSTS=${APP_DOMAIN}

# ----------------------------------------------------------------------------
# Traefik Configuration
# ----------------------------------------------------------------------------

# Traefik Basic Auth for Dashboard (optional)
# ⚠️ SECURITY WARNING: The default hash below is for "admin:admin" - CHANGE THIS!
# Generate your own with: htpasswd -nb admin your-secure-password
# Or use online tools like: https://hostingcanada.org/htpasswd-generator/
TRAEFIK_BASIC_AUTH=admin:$$2y$$10$$EIHbchqg0sjZLr9iZINqA.6Za7wPjGAVdTER2ob5whDLtHkkZSGbC

# ----------------------------------------------------------------------------
# Optional: GitHub OAuth Configuration
# ----------------------------------------------------------------------------

# GitHub OAuth App credentials (create at https://github.com/settings/applications/new)
# GITHUB_CLIENT_ID=your_github_client_id
# GITHUB_CLIENT_SECRET=your_github_client_secret
# GITHUB_OAUTH_REDIRECT_URI=${APP_PROTOCOL}://${APP_DOMAIN}/auth/github/callback

